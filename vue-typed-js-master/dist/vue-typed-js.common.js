(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["VueTypedJs"] = factory();
	else
		root["VueTypedJs"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOlsiZyIsIkZ1bmN0aW9uIiwiZXZhbCIsImUiLCJ3aW5kb3ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLENBQUo7O0FBRUE7QUFDQUEsSUFBSyxZQUFXO0FBQ2YsUUFBTyxJQUFQO0FBQ0EsQ0FGRyxFQUFKOztBQUlBLElBQUk7QUFDSDtBQUNBQSxLQUFJQSxLQUFLQyxTQUFTLGFBQVQsR0FBTCxJQUFrQyxDQUFDLEdBQUVDLElBQUgsRUFBUyxNQUFULENBQXRDO0FBQ0EsQ0FIRCxDQUdFLE9BQU1DLENBQU4sRUFBUztBQUNWO0FBQ0EsS0FBRyxRQUFPQyxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQXJCLEVBQ0NKLElBQUlJLE1BQUo7QUFDRDs7QUFFRDtBQUNBO0FBQ0E7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJOLENBQWpCIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/* styles */\n__webpack_require__(7)\n\nvar Component = __webpack_require__(8)(\n  /* script */\n  __webpack_require__(5),\n  /* template */\n  __webpack_require__(9),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\nComponent.options.__file = \"/Users/orlando/Desktop/contributions/play/vue-typed-js/src/components/VueTypedJs.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key !== \"__esModule\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] VueTypedJs.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-1de4642d\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-1de4642d\", Component.options)\n  }\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9WdWVUeXBlZEpzLnZ1ZT9iZWQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBLHFCQUFnRzs7QUFFaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRSxpREFBaUQsSUFBSTtBQUNwSSxtQ0FBbUM7O0FBRW5DO0FBQ0EsWUFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIHN0eWxlcyAqL1xucmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9sb2FkZXIuanM/e1xcXCJvbWl0XFxcIjowLFxcXCJyZW1vdmVcXFwiOnRydWV9IWNzcy1sb2FkZXIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLXJld3JpdGVyP2lkPWRhdGEtdi0xZGU0NjQyZCFzYXNzLWxvYWRlciEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL1Z1ZVR5cGVkSnMudnVlXCIpXG5cbnZhciBDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKShcbiAgLyogc2NyaXB0ICovXG4gIHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlciEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL1Z1ZVR5cGVkSnMudnVlXCIpLFxuICAvKiB0ZW1wbGF0ZSAqL1xuICByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/aWQ9ZGF0YS12LTFkZTQ2NDJkIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9WdWVUeXBlZEpzLnZ1ZVwiKSxcbiAgLyogc2NvcGVJZCAqL1xuICBudWxsLFxuICAvKiBjc3NNb2R1bGVzICovXG4gIG51bGxcbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiL1VzZXJzL29ybGFuZG8vRGVza3RvcC9jb250cmlidXRpb25zL3BsYXkvdnVlLXR5cGVkLWpzL3NyYy9jb21wb25lbnRzL1Z1ZVR5cGVkSnMudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkgIT09IFwiX19lc01vZHVsZVwifSkpIHtjb25zb2xlLmVycm9yKFwibmFtZWQgZXhwb3J0cyBhcmUgbm90IHN1cHBvcnRlZCBpbiAqLnZ1ZSBmaWxlcy5cIil9XG5pZiAoQ29tcG9uZW50Lm9wdGlvbnMuZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlLWxvYWRlcl0gVnVlVHlwZWRKcy52dWU6IGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCB3aXRoIHRlbXBsYXRlcywgdGhleSBzaG91bGQgdXNlIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMWRlNDY0MmRcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0xZGU0NjQyZFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxufSkoKX1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY29tcG9uZW50cy9WdWVUeXBlZEpzLnZ1ZVxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return props; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getEventHandlers; });\nvar props = {\n  strings: {\n    type: Array,\n    required: false,\n    default: function _default() {\n      return ['Hello World!'];\n    }\n  },\n  stringsElement: {\n    type: String,\n    required: false,\n    default: null\n  },\n  typeSpeed: {\n    type: Number,\n    required: false,\n    default: 50\n  },\n  startDelay: {\n    type: Number,\n    required: false,\n    default: 0\n  },\n  backSpeed: {\n    type: Number,\n    required: false,\n    default: 0\n  },\n  smartBackspace: {\n    type: Boolean,\n    required: false,\n    default: true\n  },\n  shuffle: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  backDelay: {\n    type: Number,\n    required: false,\n    default: 700\n  },\n  fadeOut: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  fadeOutClass: {\n    type: String,\n    required: false,\n    default: 'typed-fade-out'\n  },\n  fadeOutDelay: {\n    type: Number,\n    required: false,\n    default: 500\n  },\n  loop: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  loopCount: {\n    type: Number,\n    required: false,\n    default: Infinity\n  },\n  showCursor: {\n    type: Boolean,\n    required: false,\n    default: true\n  },\n  cursorChar: {\n    type: String,\n    required: false,\n    default: '|'\n  },\n  autoInsertCss: {\n    type: Boolean,\n    required: false,\n    default: true\n  },\n  attr: {\n    type: String,\n    required: false,\n    default: null\n  },\n  bindInputFocusEvents: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  contentType: {\n    type: String,\n    required: false,\n    default: 'html'\n  }\n};\n\nvar getEventHandlers = function getEventHandlers(context, typedConfig) {\n  typedConfig.onComplete = function () {\n    context.$emit('onComplete');\n  };\n\n  typedConfig.preStringTyped = function () {\n    context.$emit('preStringTyped');\n  };\n\n  typedConfig.onStringTyped = function () {\n    context.$emit('onStringTyped');\n  };\n\n  typedConfig.onLastStringBackspaced = function () {\n    context.$emit('onLastStringBackspaced');\n  };\n\n  typedConfig.onTypingPaused = function () {\n    context.$emit('onTypingPaused');\n  };\n\n  typedConfig.onTypingResumed = function () {\n    context.$emit('onTypingResumed');\n  };\n\n  typedConfig.onReset = function () {\n    context.$emit('onReset');\n  };\n\n  typedConfig.onStop = function () {\n    context.$emit('onStop');\n  };\n\n  typedConfig.onStart = function () {\n    context.$emit('onStart');\n  };\n\n  typedConfig.onDestroy = function () {\n    context.$emit('onDestroy');\n  };\n\n  return typedConfig;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL3R5cGVkLWNvbXBvbmVudC5jb25maWcuanM/ZTQyNiJdLCJuYW1lcyI6WyJwcm9wcyIsInN0cmluZ3MiLCJ0eXBlIiwiQXJyYXkiLCJyZXF1aXJlZCIsImRlZmF1bHQiLCJzdHJpbmdzRWxlbWVudCIsIlN0cmluZyIsInR5cGVTcGVlZCIsIk51bWJlciIsInN0YXJ0RGVsYXkiLCJiYWNrU3BlZWQiLCJzbWFydEJhY2tzcGFjZSIsIkJvb2xlYW4iLCJzaHVmZmxlIiwiYmFja0RlbGF5IiwiZmFkZU91dCIsImZhZGVPdXRDbGFzcyIsImZhZGVPdXREZWxheSIsImxvb3AiLCJsb29wQ291bnQiLCJJbmZpbml0eSIsInNob3dDdXJzb3IiLCJjdXJzb3JDaGFyIiwiYXV0b0luc2VydENzcyIsImF0dHIiLCJiaW5kSW5wdXRGb2N1c0V2ZW50cyIsImNvbnRlbnRUeXBlIiwiZ2V0RXZlbnRIYW5kbGVycyIsImNvbnRleHQiLCJ0eXBlZENvbmZpZyIsIm9uQ29tcGxldGUiLCIkZW1pdCIsInByZVN0cmluZ1R5cGVkIiwib25TdHJpbmdUeXBlZCIsIm9uTGFzdFN0cmluZ0JhY2tzcGFjZWQiLCJvblR5cGluZ1BhdXNlZCIsIm9uVHlwaW5nUmVzdW1lZCIsIm9uUmVzZXQiLCJvblN0b3AiLCJvblN0YXJ0Iiwib25EZXN0cm95Il0sIm1hcHBpbmdzIjoiOztBQUFPLElBQU1BLFFBQVE7QUFDbkJDLFdBQVM7QUFDUEMsVUFBTUMsS0FEQztBQUVQQyxjQUFVLEtBRkg7QUFHUEMsYUFBUyxvQkFBWTtBQUNuQixhQUFPLENBQUUsY0FBRixDQUFQO0FBQ0Q7QUFMTSxHQURVO0FBUW5CQyxrQkFBZ0I7QUFDZEosVUFBTUssTUFEUTtBQUVkSCxjQUFVLEtBRkk7QUFHZEMsYUFBUztBQUhLLEdBUkc7QUFhbkJHLGFBQVc7QUFDVE4sVUFBTU8sTUFERztBQUVUTCxjQUFVLEtBRkQ7QUFHVEMsYUFBUztBQUhBLEdBYlE7QUFrQm5CSyxjQUFZO0FBQ1ZSLFVBQU1PLE1BREk7QUFFVkwsY0FBVSxLQUZBO0FBR1ZDLGFBQVM7QUFIQyxHQWxCTztBQXVCbkJNLGFBQVc7QUFDVFQsVUFBTU8sTUFERztBQUVUTCxjQUFVLEtBRkQ7QUFHVEMsYUFBUztBQUhBLEdBdkJRO0FBNEJuQk8sa0JBQWdCO0FBQ2RWLFVBQU1XLE9BRFE7QUFFZFQsY0FBVSxLQUZJO0FBR2RDLGFBQVM7QUFISyxHQTVCRztBQWlDbkJTLFdBQVM7QUFDUFosVUFBTVcsT0FEQztBQUVQVCxjQUFVLEtBRkg7QUFHUEMsYUFBUztBQUhGLEdBakNVO0FBc0NuQlUsYUFBVztBQUNUYixVQUFNTyxNQURHO0FBRVRMLGNBQVUsS0FGRDtBQUdUQyxhQUFTO0FBSEEsR0F0Q1E7QUEyQ25CVyxXQUFTO0FBQ1BkLFVBQU1XLE9BREM7QUFFUFQsY0FBVSxLQUZIO0FBR1BDLGFBQVM7QUFIRixHQTNDVTtBQWdEbkJZLGdCQUFjO0FBQ1pmLFVBQU1LLE1BRE07QUFFWkgsY0FBVSxLQUZFO0FBR1pDLGFBQVM7QUFIRyxHQWhESztBQXFEbkJhLGdCQUFjO0FBQ1poQixVQUFNTyxNQURNO0FBRVpMLGNBQVUsS0FGRTtBQUdaQyxhQUFTO0FBSEcsR0FyREs7QUEwRG5CYyxRQUFNO0FBQ0pqQixVQUFNVyxPQURGO0FBRUpULGNBQVUsS0FGTjtBQUdKQyxhQUFTO0FBSEwsR0ExRGE7QUErRG5CZSxhQUFXO0FBQ1RsQixVQUFNTyxNQURHO0FBRVRMLGNBQVUsS0FGRDtBQUdUQyxhQUFTZ0I7QUFIQSxHQS9EUTtBQW9FbkJDLGNBQVk7QUFDVnBCLFVBQU1XLE9BREk7QUFFVlQsY0FBVSxLQUZBO0FBR1ZDLGFBQVM7QUFIQyxHQXBFTztBQXlFbkJrQixjQUFZO0FBQ1ZyQixVQUFNSyxNQURJO0FBRVZILGNBQVUsS0FGQTtBQUdWQyxhQUFTO0FBSEMsR0F6RU87QUE4RW5CbUIsaUJBQWU7QUFDYnRCLFVBQU1XLE9BRE87QUFFYlQsY0FBVSxLQUZHO0FBR2JDLGFBQVM7QUFISSxHQTlFSTtBQW1GbkJvQixRQUFNO0FBQ0p2QixVQUFNSyxNQURGO0FBRUpILGNBQVUsS0FGTjtBQUdKQyxhQUFTO0FBSEwsR0FuRmE7QUF3Rm5CcUIsd0JBQXNCO0FBQ3BCeEIsVUFBTVcsT0FEYztBQUVwQlQsY0FBVSxLQUZVO0FBR3BCQyxhQUFTO0FBSFcsR0F4Rkg7QUE2Rm5Cc0IsZUFBYTtBQUNYekIsVUFBTUssTUFESztBQUVYSCxjQUFVLEtBRkM7QUFHWEMsYUFBUztBQUhFO0FBN0ZNLENBQWQ7O0FBb0dBLElBQU11QixtQkFBbUIsU0FBbkJBLGdCQUFtQixDQUFDQyxPQUFELEVBQVVDLFdBQVYsRUFBMEI7QUFDeERBLGNBQVlDLFVBQVosR0FBeUIsWUFBTTtBQUM3QkYsWUFBUUcsS0FBUixDQUFjLFlBQWQ7QUFDRCxHQUZEOztBQUlBRixjQUFZRyxjQUFaLEdBQTZCLFlBQU07QUFDakNKLFlBQVFHLEtBQVIsQ0FBYyxnQkFBZDtBQUNELEdBRkQ7O0FBSUFGLGNBQVlJLGFBQVosR0FBNEIsWUFBTTtBQUNoQ0wsWUFBUUcsS0FBUixDQUFjLGVBQWQ7QUFDRCxHQUZEOztBQUlBRixjQUFZSyxzQkFBWixHQUFxQyxZQUFNO0FBQ3pDTixZQUFRRyxLQUFSLENBQWMsd0JBQWQ7QUFDRCxHQUZEOztBQUlBRixjQUFZTSxjQUFaLEdBQTZCLFlBQU07QUFDakNQLFlBQVFHLEtBQVIsQ0FBYyxnQkFBZDtBQUNELEdBRkQ7O0FBSUFGLGNBQVlPLGVBQVosR0FBOEIsWUFBTTtBQUNsQ1IsWUFBUUcsS0FBUixDQUFjLGlCQUFkO0FBQ0QsR0FGRDs7QUFJQUYsY0FBWVEsT0FBWixHQUFzQixZQUFNO0FBQzFCVCxZQUFRRyxLQUFSLENBQWMsU0FBZDtBQUNELEdBRkQ7O0FBSUFGLGNBQVlTLE1BQVosR0FBcUIsWUFBTTtBQUN6QlYsWUFBUUcsS0FBUixDQUFjLFFBQWQ7QUFDRCxHQUZEOztBQUlBRixjQUFZVSxPQUFaLEdBQXNCLFlBQU07QUFDMUJYLFlBQVFHLEtBQVIsQ0FBYyxTQUFkO0FBQ0QsR0FGRDs7QUFJQUYsY0FBWVcsU0FBWixHQUF3QixZQUFNO0FBQzVCWixZQUFRRyxLQUFSLENBQWMsV0FBZDtBQUNELEdBRkQ7O0FBSUEsU0FBT0YsV0FBUDtBQUNELENBMUNNIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvcHMgPSB7XG4gIHN0cmluZ3M6IHtcbiAgICB0eXBlOiBBcnJheSxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFsgJ0hlbGxvIFdvcmxkIScgXVxuICAgIH0sXG4gIH0sXG4gIHN0cmluZ3NFbGVtZW50OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiBudWxsLFxuICB9LFxuICB0eXBlU3BlZWQ6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IDUwLFxuICB9LFxuICBzdGFydERlbGF5OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiAwLFxuICB9LFxuICBiYWNrU3BlZWQ6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IDAsXG4gIH0sXG4gIHNtYXJ0QmFja3NwYWNlOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogdHJ1ZSxcbiAgfSxcbiAgc2h1ZmZsZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9LFxuICBiYWNrRGVsYXk6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IDcwMCxcbiAgfSxcbiAgZmFkZU91dDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9LFxuICBmYWRlT3V0Q2xhc3M6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6ICd0eXBlZC1mYWRlLW91dCcsXG4gIH0sXG4gIGZhZGVPdXREZWxheToge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogNTAwLFxuICB9LFxuICBsb29wOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogZmFsc2UsXG4gIH0sXG4gIGxvb3BDb3VudDoge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogSW5maW5pdHksXG4gIH0sXG4gIHNob3dDdXJzb3I6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiB0cnVlLFxuICB9LFxuICBjdXJzb3JDaGFyOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiAnfCcsXG4gIH0sXG4gIGF1dG9JbnNlcnRDc3M6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiB0cnVlLFxuICB9LFxuICBhdHRyOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiBudWxsLFxuICB9LFxuICBiaW5kSW5wdXRGb2N1c0V2ZW50czoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9LFxuICBjb250ZW50VHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgZGVmYXVsdDogJ2h0bWwnLFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgZ2V0RXZlbnRIYW5kbGVycyA9IChjb250ZXh0LCB0eXBlZENvbmZpZykgPT4ge1xuICB0eXBlZENvbmZpZy5vbkNvbXBsZXRlID0gKCkgPT4ge1xuICAgIGNvbnRleHQuJGVtaXQoJ29uQ29tcGxldGUnKVxuICB9XG5cbiAgdHlwZWRDb25maWcucHJlU3RyaW5nVHlwZWQgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgncHJlU3RyaW5nVHlwZWQnKVxuICB9XG5cbiAgdHlwZWRDb25maWcub25TdHJpbmdUeXBlZCA9ICgpID0+IHtcbiAgICBjb250ZXh0LiRlbWl0KCdvblN0cmluZ1R5cGVkJylcbiAgfVxuXG4gIHR5cGVkQ29uZmlnLm9uTGFzdFN0cmluZ0JhY2tzcGFjZWQgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25MYXN0U3RyaW5nQmFja3NwYWNlZCcpXG4gIH1cblxuICB0eXBlZENvbmZpZy5vblR5cGluZ1BhdXNlZCA9ICgpID0+IHtcbiAgICBjb250ZXh0LiRlbWl0KCdvblR5cGluZ1BhdXNlZCcpXG4gIH1cblxuICB0eXBlZENvbmZpZy5vblR5cGluZ1Jlc3VtZWQgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25UeXBpbmdSZXN1bWVkJylcbiAgfVxuXG4gIHR5cGVkQ29uZmlnLm9uUmVzZXQgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25SZXNldCcpXG4gIH1cblxuICB0eXBlZENvbmZpZy5vblN0b3AgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25TdG9wJylcbiAgfVxuXG4gIHR5cGVkQ29uZmlnLm9uU3RhcnQgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25TdGFydCcpXG4gIH1cblxuICB0eXBlZENvbmZpZy5vbkRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgY29udGV4dC4kZW1pdCgnb25EZXN0cm95JylcbiAgfVxuXG4gIHJldHVybiB0eXBlZENvbmZpZ1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbmZpZy90eXBlZC1jb21wb25lbnQuY29uZmlnLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (immutable) */ __webpack_exports__[\"install\"] = install;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_VueTypedJs_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_VueTypedJs_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_VueTypedJs_vue__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"VueTypedJs\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_VueTypedJs_vue___default.a; });\n\n\n// Install the components\nfunction install(Vue) {\n  Vue.component('vue-typed-js', __WEBPACK_IMPORTED_MODULE_0__components_VueTypedJs_vue___default.a);\n}\n\n// Expose the components\n\n\n// Plugin\nvar plugin = {\n  /* eslint-disable no-undef */\n  version: \"0.1.2\",\n  install: install\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (plugin);\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6WyJpbnN0YWxsIiwiVnVlIiwiY29tcG9uZW50IiwicGx1Z2luIiwidmVyc2lvbiIsIkdsb2JhbFZ1ZSIsIndpbmRvdyIsImdsb2JhbCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFQTtBQUNPLFNBQVNBLE9BQVQsQ0FBa0JDLEdBQWxCLEVBQXVCO0FBQzVCQSxNQUFJQyxTQUFKLENBQWMsY0FBZCxFQUE4QixrRUFBOUI7QUFDRDs7QUFFRDtBQUNBOztBQUlBO0FBQ0EsSUFBTUMsU0FBUztBQUNiO0FBQ0FDLFdBQVMsT0FGSTtBQUdiSjtBQUhhLENBQWY7O0FBTUEsK0RBQWVHLE1BQWY7O0FBRUE7QUFDQSxJQUFJRSxZQUFZLElBQWhCO0FBQ0EsSUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQ2pDRCxjQUFZQyxPQUFPTCxHQUFuQjtBQUNELENBRkQsTUFFTyxJQUFJLE9BQU9NLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDeENGLGNBQVlFLE9BQU9OLEdBQW5CO0FBQ0Q7QUFDRCxJQUFJSSxTQUFKLEVBQWU7QUFDYkEsWUFBVUcsR0FBVixDQUFjTCxNQUFkO0FBQ0QsQyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZVR5cGVkSnMgZnJvbSAnLi9jb21wb25lbnRzL1Z1ZVR5cGVkSnMudnVlJ1xuXG4vLyBJbnN0YWxsIHRoZSBjb21wb25lbnRzXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFsbCAoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoJ3Z1ZS10eXBlZC1qcycsIFZ1ZVR5cGVkSnMpXG59XG5cbi8vIEV4cG9zZSB0aGUgY29tcG9uZW50c1xuZXhwb3J0IHtcbiAgVnVlVHlwZWRKcyxcbn1cblxuLy8gUGx1Z2luXG5jb25zdCBwbHVnaW4gPSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG4gIHZlcnNpb246IFZFUlNJT04sXG4gIGluc3RhbGwsXG59XG5cbmV4cG9ydCBkZWZhdWx0IHBsdWdpblxuXG4vLyBBdXRvLWluc3RhbGxcbmxldCBHbG9iYWxWdWUgPSBudWxsXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgR2xvYmFsVnVlID0gd2luZG93LlZ1ZVxufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICBHbG9iYWxWdWUgPSBnbG9iYWwuVnVlXG59XG5pZiAoR2xvYmFsVnVlKSB7XG4gIEdsb2JhbFZ1ZS51c2UocGx1Z2luKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2luZGV4LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.9\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif (( false ? 'undefined' : _typeof(exports)) === 'object' && ( false ? 'undefined' : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') exports[\"Typed\"] = factory();else root[\"Typed\"] = factory();\n})(this, function () {\n\treturn (/******/function (modules) {\n\t\t\t// webpackBootstrap\n\t\t\t/******/ // The module cache\n\t\t\t/******/var installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ // The require function\n\t\t\t/******/function __webpack_require__(moduleId) {\n\t\t\t\t/******/\n\t\t\t\t/******/ // Check if module is in cache\n\t\t\t\t/******/if (installedModules[moduleId])\n\t\t\t\t\t/******/return installedModules[moduleId].exports;\n\t\t\t\t/******/\n\t\t\t\t/******/ // Create a new module (and put it into the cache)\n\t\t\t\t/******/var module = installedModules[moduleId] = {\n\t\t\t\t\t/******/exports: {},\n\t\t\t\t\t/******/id: moduleId,\n\t\t\t\t\t/******/loaded: false\n\t\t\t\t\t/******/ };\n\t\t\t\t/******/\n\t\t\t\t/******/ // Execute the module function\n\t\t\t\t/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t\t/******/\n\t\t\t\t/******/ // Flag the module as loaded\n\t\t\t\t/******/module.loaded = true;\n\t\t\t\t/******/\n\t\t\t\t/******/ // Return the exports of the module\n\t\t\t\t/******/return module.exports;\n\t\t\t\t/******/\n\t\t\t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ // expose the modules object (__webpack_modules__)\n\t\t\t/******/__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ // expose the module cache\n\t\t\t/******/__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ // __webpack_public_path__\n\t\t\t/******/__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ // Load entry module and return exports\n\t\t\t/******/return __webpack_require__(0);\n\t\t\t/******/\n\t\t}(\n\t\t/************************************************************************/\n\t\t/******/[\n\t\t/* 0 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\t'use strict';\n\n\t\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\t\tvalue: true\n\t\t\t});\n\n\t\t\tvar _createClass = function () {\n\t\t\t\tfunction defineProperties(target, props) {\n\t\t\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t\t\t\t}\n\t\t\t\t}return function (Constructor, protoProps, staticProps) {\n\t\t\t\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t\t\t\t};\n\t\t\t}();\n\n\t\t\tfunction _classCallCheck(instance, Constructor) {\n\t\t\t\tif (!(instance instanceof Constructor)) {\n\t\t\t\t\tthrow new TypeError('Cannot call a class as a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _initializerJs = __webpack_require__(1);\n\n\t\t\tvar _htmlParserJs = __webpack_require__(3);\n\n\t\t\t/**\n    * Welcome to Typed.js!\n    * @param {string} elementId HTML element ID _OR_ HTML element\n    * @param {object} options options object\n    * @returns {object} a new Typed object\n    */\n\n\t\t\tvar Typed = function () {\n\t\t\t\tfunction Typed(elementId, options) {\n\t\t\t\t\t_classCallCheck(this, Typed);\n\n\t\t\t\t\t// Initialize it up\n\t\t\t\t\t_initializerJs.initializer.load(this, options, elementId);\n\t\t\t\t\t// All systems go!\n\t\t\t\t\tthis.begin();\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Toggle start() and stop() of the Typed instance\n     * @public\n     */\n\n\t\t\t\t_createClass(Typed, [{\n\t\t\t\t\tkey: 'toggle',\n\t\t\t\t\tvalue: function toggle() {\n\t\t\t\t\t\tthis.pause.status ? this.start() : this.stop();\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Stop typing / backspacing and enable cursor blinking\n      * @public\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'stop',\n\t\t\t\t\tvalue: function stop() {\n\t\t\t\t\t\tif (this.typingComplete) return;\n\t\t\t\t\t\tif (this.pause.status) return;\n\t\t\t\t\t\tthis.toggleBlinking(true);\n\t\t\t\t\t\tthis.pause.status = true;\n\t\t\t\t\t\tthis.options.onStop(this.arrayPos, this);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Start typing / backspacing after being stopped\n      * @public\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'start',\n\t\t\t\t\tvalue: function start() {\n\t\t\t\t\t\tif (this.typingComplete) return;\n\t\t\t\t\t\tif (!this.pause.status) return;\n\t\t\t\t\t\tthis.pause.status = false;\n\t\t\t\t\t\tif (this.pause.typewrite) {\n\t\t\t\t\t\t\tthis.typewrite(this.pause.curString, this.pause.curStrPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.backspace(this.pause.curString, this.pause.curStrPos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.options.onStart(this.arrayPos, this);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Destroy this instance of Typed\n      * @public\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'destroy',\n\t\t\t\t\tvalue: function destroy() {\n\t\t\t\t\t\tthis.reset(false);\n\t\t\t\t\t\tthis.options.onDestroy(this);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Reset Typed and optionally restarts\n      * @param {boolean} restart\n      * @public\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'reset',\n\t\t\t\t\tvalue: function reset() {\n\t\t\t\t\t\tvar restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n\t\t\t\t\t\tclearInterval(this.timeout);\n\t\t\t\t\t\tthis.replaceText('');\n\t\t\t\t\t\tif (this.cursor && this.cursor.parentNode) {\n\t\t\t\t\t\t\tthis.cursor.parentNode.removeChild(this.cursor);\n\t\t\t\t\t\t\tthis.cursor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.strPos = 0;\n\t\t\t\t\t\tthis.arrayPos = 0;\n\t\t\t\t\t\tthis.curLoop = 0;\n\t\t\t\t\t\tif (restart) {\n\t\t\t\t\t\t\tthis.insertCursor();\n\t\t\t\t\t\t\tthis.options.onReset(this);\n\t\t\t\t\t\t\tthis.begin();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Begins the typing animation\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'begin',\n\t\t\t\t\tvalue: function begin() {\n\t\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t\tthis.typingComplete = false;\n\t\t\t\t\t\tthis.shuffleStringsIfNeeded(this);\n\t\t\t\t\t\tthis.insertCursor();\n\t\t\t\t\t\tif (this.bindInputFocusEvents) this.bindFocusEvents();\n\t\t\t\t\t\tthis.timeout = setTimeout(function () {\n\t\t\t\t\t\t\t// Check if there is some text in the element, if yes start by backspacing the default message\n\t\t\t\t\t\t\tif (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t\t\t\t\t\t\t\t_this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Start typing\n\t\t\t\t\t\t\t\t_this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this.startDelay);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Called for each character typed\n      * @param {string} curString the current string in the strings array\n      * @param {number} curStrPos the current position in the curString\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'typewrite',\n\t\t\t\t\tvalue: function typewrite(curString, curStrPos) {\n\t\t\t\t\t\tvar _this2 = this;\n\n\t\t\t\t\t\tif (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t\t\t\t\t\t\tthis.el.classList.remove(this.fadeOutClass);\n\t\t\t\t\t\t\tif (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar humanize = this.humanizer(this.typeSpeed);\n\t\t\t\t\t\tvar numChars = 1;\n\n\t\t\t\t\t\tif (this.pause.status === true) {\n\t\t\t\t\t\t\tthis.setPauseStatus(curString, curStrPos, true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// contain typing function in a timeout humanize'd delay\n\t\t\t\t\t\tthis.timeout = setTimeout(function () {\n\t\t\t\t\t\t\t// skip over any HTML chars\n\t\t\t\t\t\t\tcurStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\n\t\t\t\t\t\t\tvar pauseTime = 0;\n\t\t\t\t\t\t\tvar substr = curString.substr(curStrPos);\n\t\t\t\t\t\t\t// check for an escape character before a pause value\n\t\t\t\t\t\t\t// format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t\t\t\t\t\t\t// single ^ are removed from string\n\t\t\t\t\t\t\tif (substr.charAt(0) === '^') {\n\t\t\t\t\t\t\t\tif (/^\\^\\d+/.test(substr)) {\n\t\t\t\t\t\t\t\t\tvar skip = 1; // skip at least 1\n\t\t\t\t\t\t\t\t\tsubstr = /\\d+/.exec(substr)[0];\n\t\t\t\t\t\t\t\t\tskip += substr.length;\n\t\t\t\t\t\t\t\t\tpauseTime = parseInt(substr);\n\t\t\t\t\t\t\t\t\t_this2.temporaryPause = true;\n\t\t\t\t\t\t\t\t\t_this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t\t\t\t\t\t\t\t\t// strip out the escape character and pause value so they're not printed\n\t\t\t\t\t\t\t\t\tcurString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t\t\t\t\t\t\t\t\t_this2.toggleBlinking(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// check for skip characters formatted as\n\t\t\t\t\t\t\t// \"this is a `string to print NOW` ...\"\n\t\t\t\t\t\t\tif (substr.charAt(0) === '`') {\n\t\t\t\t\t\t\t\twhile (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t\t\t\t\t\t\t\t\tnumChars++;\n\t\t\t\t\t\t\t\t\tif (curStrPos + numChars > curString.length) break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// strip out the escape characters and append all the string in between\n\t\t\t\t\t\t\t\tvar stringBeforeSkip = curString.substring(0, curStrPos);\n\t\t\t\t\t\t\t\tvar stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t\t\t\t\t\t\t\tvar stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t\t\t\t\t\t\t\tcurString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t\t\t\t\t\t\t\tnumChars--;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// timeout for any pause after a character\n\t\t\t\t\t\t\t_this2.timeout = setTimeout(function () {\n\t\t\t\t\t\t\t\t// Accounts for blinking while paused\n\t\t\t\t\t\t\t\t_this2.toggleBlinking(false);\n\n\t\t\t\t\t\t\t\t// We're done with this sentence!\n\t\t\t\t\t\t\t\tif (curStrPos >= curString.length) {\n\t\t\t\t\t\t\t\t\t_this2.doneTyping(curString, curStrPos);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_this2.keepTyping(curString, curStrPos, numChars);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// end of character pause\n\t\t\t\t\t\t\t\tif (_this2.temporaryPause) {\n\t\t\t\t\t\t\t\t\t_this2.temporaryPause = false;\n\t\t\t\t\t\t\t\t\t_this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, pauseTime);\n\n\t\t\t\t\t\t\t// humanized value for typing\n\t\t\t\t\t\t}, humanize);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Continue to the next string & begin typing\n      * @param {string} curString the current string in the strings array\n      * @param {number} curStrPos the current position in the curString\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'keepTyping',\n\t\t\t\t\tvalue: function keepTyping(curString, curStrPos, numChars) {\n\t\t\t\t\t\t// call before functions if applicable\n\t\t\t\t\t\tif (curStrPos === 0) {\n\t\t\t\t\t\t\tthis.toggleBlinking(false);\n\t\t\t\t\t\t\tthis.options.preStringTyped(this.arrayPos, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// start typing each new char into existing string\n\t\t\t\t\t\t// curString: arg, this.el.html: original text inside element\n\t\t\t\t\t\tcurStrPos += numChars;\n\t\t\t\t\t\tvar nextString = curString.substr(0, curStrPos);\n\t\t\t\t\t\tthis.replaceText(nextString);\n\t\t\t\t\t\t// loop the function\n\t\t\t\t\t\tthis.typewrite(curString, curStrPos);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * We're done typing all strings\n      * @param {string} curString the current string in the strings array\n      * @param {number} curStrPos the current position in the curString\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'doneTyping',\n\t\t\t\t\tvalue: function doneTyping(curString, curStrPos) {\n\t\t\t\t\t\tvar _this3 = this;\n\n\t\t\t\t\t\t// fires callback function\n\t\t\t\t\t\tthis.options.onStringTyped(this.arrayPos, this);\n\t\t\t\t\t\tthis.toggleBlinking(true);\n\t\t\t\t\t\t// is this the final string\n\t\t\t\t\t\tif (this.arrayPos === this.strings.length - 1) {\n\t\t\t\t\t\t\t// callback that occurs on the last typed string\n\t\t\t\t\t\t\tthis.complete();\n\t\t\t\t\t\t\t// quit if we wont loop back\n\t\t\t\t\t\t\tif (this.loop === false || this.curLoop === this.loopCount) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.timeout = setTimeout(function () {\n\t\t\t\t\t\t\t_this3.backspace(curString, curStrPos);\n\t\t\t\t\t\t}, this.backDelay);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Backspaces 1 character at a time\n      * @param {string} curString the current string in the strings array\n      * @param {number} curStrPos the current position in the curString\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'backspace',\n\t\t\t\t\tvalue: function backspace(curString, curStrPos) {\n\t\t\t\t\t\tvar _this4 = this;\n\n\t\t\t\t\t\tif (this.pause.status === true) {\n\t\t\t\t\t\t\tthis.setPauseStatus(curString, curStrPos, true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.fadeOut) return this.initFadeOut();\n\n\t\t\t\t\t\tthis.toggleBlinking(false);\n\t\t\t\t\t\tvar humanize = this.humanizer(this.backSpeed);\n\n\t\t\t\t\t\tthis.timeout = setTimeout(function () {\n\t\t\t\t\t\t\tcurStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t\t\t\t\t\t\t// replace text with base text + typed characters\n\t\t\t\t\t\t\tvar curStringAtPosition = curString.substr(0, curStrPos);\n\t\t\t\t\t\t\t_this4.replaceText(curStringAtPosition);\n\n\t\t\t\t\t\t\t// if smartBack is enabled\n\t\t\t\t\t\t\tif (_this4.smartBackspace) {\n\t\t\t\t\t\t\t\t// the remaining part of the current string is equal of the same part of the new string\n\t\t\t\t\t\t\t\tvar nextString = _this4.strings[_this4.arrayPos + 1];\n\t\t\t\t\t\t\t\tif (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t\t\t\t\t\t\t\t\t_this4.stopNum = curStrPos;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_this4.stopNum = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if the number (id of character in current string) is\n\t\t\t\t\t\t\t// less than the stop number, keep going\n\t\t\t\t\t\t\tif (curStrPos > _this4.stopNum) {\n\t\t\t\t\t\t\t\t// subtract characters one by one\n\t\t\t\t\t\t\t\tcurStrPos--;\n\t\t\t\t\t\t\t\t// loop the function\n\t\t\t\t\t\t\t\t_this4.backspace(curString, curStrPos);\n\t\t\t\t\t\t\t} else if (curStrPos <= _this4.stopNum) {\n\t\t\t\t\t\t\t\t// if the stop number has been reached, increase\n\t\t\t\t\t\t\t\t// array position to next string\n\t\t\t\t\t\t\t\t_this4.arrayPos++;\n\t\t\t\t\t\t\t\t// When looping, begin at the beginning after backspace complete\n\t\t\t\t\t\t\t\tif (_this4.arrayPos === _this4.strings.length) {\n\t\t\t\t\t\t\t\t\t_this4.arrayPos = 0;\n\t\t\t\t\t\t\t\t\t_this4.options.onLastStringBackspaced();\n\t\t\t\t\t\t\t\t\t_this4.shuffleStringsIfNeeded();\n\t\t\t\t\t\t\t\t\t_this4.begin();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// humanized value for typing\n\t\t\t\t\t\t}, humanize);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Full animation is complete\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'complete',\n\t\t\t\t\tvalue: function complete() {\n\t\t\t\t\t\tthis.options.onComplete(this);\n\t\t\t\t\t\tif (this.loop) {\n\t\t\t\t\t\t\tthis.curLoop++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.typingComplete = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Has the typing been stopped\n      * @param {string} curString the current string in the strings array\n      * @param {number} curStrPos the current position in the curString\n      * @param {boolean} isTyping\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'setPauseStatus',\n\t\t\t\t\tvalue: function setPauseStatus(curString, curStrPos, isTyping) {\n\t\t\t\t\t\tthis.pause.typewrite = isTyping;\n\t\t\t\t\t\tthis.pause.curString = curString;\n\t\t\t\t\t\tthis.pause.curStrPos = curStrPos;\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Toggle the blinking cursor\n      * @param {boolean} isBlinking\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'toggleBlinking',\n\t\t\t\t\tvalue: function toggleBlinking(isBlinking) {\n\t\t\t\t\t\tif (!this.cursor) return;\n\t\t\t\t\t\t// if in paused state, don't toggle blinking a 2nd time\n\t\t\t\t\t\tif (this.pause.status) return;\n\t\t\t\t\t\tif (this.cursorBlinking === isBlinking) return;\n\t\t\t\t\t\tthis.cursorBlinking = isBlinking;\n\t\t\t\t\t\tif (isBlinking) {\n\t\t\t\t\t\t\tthis.cursor.classList.add('typed-cursor--blink');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.cursor.classList.remove('typed-cursor--blink');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Speed in MS to type\n      * @param {number} speed\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'humanizer',\n\t\t\t\t\tvalue: function humanizer(speed) {\n\t\t\t\t\t\treturn Math.round(Math.random() * speed / 2) + speed;\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Shuffle the sequence of the strings array\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'shuffleStringsIfNeeded',\n\t\t\t\t\tvalue: function shuffleStringsIfNeeded() {\n\t\t\t\t\t\tif (!this.shuffle) return;\n\t\t\t\t\t\tthis.sequence = this.sequence.sort(function () {\n\t\t\t\t\t\t\treturn Math.random() - 0.5;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Adds a CSS class to fade out current string\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'initFadeOut',\n\t\t\t\t\tvalue: function initFadeOut() {\n\t\t\t\t\t\tvar _this5 = this;\n\n\t\t\t\t\t\tthis.el.className += ' ' + this.fadeOutClass;\n\t\t\t\t\t\tif (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t\t\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\t\t\t_this5.arrayPos++;\n\t\t\t\t\t\t\t_this5.replaceText('');\n\n\t\t\t\t\t\t\t// Resets current string if end of loop reached\n\t\t\t\t\t\t\tif (_this5.strings.length > _this5.arrayPos) {\n\t\t\t\t\t\t\t\t_this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_this5.typewrite(_this5.strings[0], 0);\n\t\t\t\t\t\t\t\t_this5.arrayPos = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this.fadeOutDelay);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Replaces current text in the HTML element\n      * depending on element type\n      * @param {string} str\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'replaceText',\n\t\t\t\t\tvalue: function replaceText(str) {\n\t\t\t\t\t\tif (this.attr) {\n\t\t\t\t\t\t\tthis.el.setAttribute(this.attr, str);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this.isInput) {\n\t\t\t\t\t\t\t\tthis.el.value = str;\n\t\t\t\t\t\t\t} else if (this.contentType === 'html') {\n\t\t\t\t\t\t\t\tthis.el.innerHTML = str;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.el.textContent = str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * If using input elements, bind focus in order to\n      * start and stop the animation\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'bindFocusEvents',\n\t\t\t\t\tvalue: function bindFocusEvents() {\n\t\t\t\t\t\tvar _this6 = this;\n\n\t\t\t\t\t\tif (!this.isInput) return;\n\t\t\t\t\t\tthis.el.addEventListener('focus', function (e) {\n\t\t\t\t\t\t\t_this6.stop();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.el.addEventListener('blur', function (e) {\n\t\t\t\t\t\t\tif (_this6.el.value && _this6.el.value.length !== 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_this6.start();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * On init, insert the cursor element\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'insertCursor',\n\t\t\t\t\tvalue: function insertCursor() {\n\t\t\t\t\t\tif (!this.showCursor) return;\n\t\t\t\t\t\tif (this.cursor) return;\n\t\t\t\t\t\tthis.cursor = document.createElement('span');\n\t\t\t\t\t\tthis.cursor.className = 'typed-cursor';\n\t\t\t\t\t\tthis.cursor.innerHTML = this.cursorChar;\n\t\t\t\t\t\tthis.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn Typed;\n\t\t\t}();\n\n\t\t\texports['default'] = Typed;\n\t\t\tmodule.exports = exports['default'];\n\n\t\t\t/***/\n\t\t},\n\t\t/* 1 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\t'use strict';\n\n\t\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\t\tvalue: true\n\t\t\t});\n\n\t\t\tvar _extends = Object.assign || function (target) {\n\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\tvar source = arguments[i];for (var key in source) {\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}return target;\n\t\t\t};\n\n\t\t\tvar _createClass = function () {\n\t\t\t\tfunction defineProperties(target, props) {\n\t\t\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t\t\t\t}\n\t\t\t\t}return function (Constructor, protoProps, staticProps) {\n\t\t\t\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t\t\t\t};\n\t\t\t}();\n\n\t\t\tfunction _interopRequireDefault(obj) {\n\t\t\t\treturn obj && obj.__esModule ? obj : { 'default': obj };\n\t\t\t}\n\n\t\t\tfunction _classCallCheck(instance, Constructor) {\n\t\t\t\tif (!(instance instanceof Constructor)) {\n\t\t\t\t\tthrow new TypeError('Cannot call a class as a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _defaultsJs = __webpack_require__(2);\n\n\t\t\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\n\t\t\t/**\n    * Initialize the Typed object\n    */\n\n\t\t\tvar Initializer = function () {\n\t\t\t\tfunction Initializer() {\n\t\t\t\t\t_classCallCheck(this, Initializer);\n\t\t\t\t}\n\n\t\t\t\t_createClass(Initializer, [{\n\t\t\t\t\tkey: 'load',\n\n\t\t\t\t\t/**\n      * Load up defaults & options on the Typed instance\n      * @param {Typed} self instance of Typed\n      * @param {object} options options object\n      * @param {string} elementId HTML element ID _OR_ instance of HTML element\n      * @private\n      */\n\n\t\t\t\t\tvalue: function load(self, options, elementId) {\n\t\t\t\t\t\t// chosen element to manipulate text\n\t\t\t\t\t\tif (typeof elementId === 'string') {\n\t\t\t\t\t\t\tself.el = document.querySelector(elementId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.el = elementId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tself.options = _extends({}, _defaultsJs2['default'], options);\n\n\t\t\t\t\t\t// attribute to type into\n\t\t\t\t\t\tself.isInput = self.el.tagName.toLowerCase() === 'input';\n\t\t\t\t\t\tself.attr = self.options.attr;\n\t\t\t\t\t\tself.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n\t\t\t\t\t\t// show cursor\n\t\t\t\t\t\tself.showCursor = self.isInput ? false : self.options.showCursor;\n\n\t\t\t\t\t\t// custom cursor\n\t\t\t\t\t\tself.cursorChar = self.options.cursorChar;\n\n\t\t\t\t\t\t// Is the cursor blinking\n\t\t\t\t\t\tself.cursorBlinking = true;\n\n\t\t\t\t\t\t// text content of element\n\t\t\t\t\t\tself.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\n\t\t\t\t\t\t// html or plain text\n\t\t\t\t\t\tself.contentType = self.options.contentType;\n\n\t\t\t\t\t\t// typing speed\n\t\t\t\t\t\tself.typeSpeed = self.options.typeSpeed;\n\n\t\t\t\t\t\t// add a delay before typing starts\n\t\t\t\t\t\tself.startDelay = self.options.startDelay;\n\n\t\t\t\t\t\t// backspacing speed\n\t\t\t\t\t\tself.backSpeed = self.options.backSpeed;\n\n\t\t\t\t\t\t// only backspace what doesn't match the previous string\n\t\t\t\t\t\tself.smartBackspace = self.options.smartBackspace;\n\n\t\t\t\t\t\t// amount of time to wait before backspacing\n\t\t\t\t\t\tself.backDelay = self.options.backDelay;\n\n\t\t\t\t\t\t// Fade out instead of backspace\n\t\t\t\t\t\tself.fadeOut = self.options.fadeOut;\n\t\t\t\t\t\tself.fadeOutClass = self.options.fadeOutClass;\n\t\t\t\t\t\tself.fadeOutDelay = self.options.fadeOutDelay;\n\n\t\t\t\t\t\t// variable to check whether typing is currently paused\n\t\t\t\t\t\tself.isPaused = false;\n\n\t\t\t\t\t\t// input strings of text\n\t\t\t\t\t\tself.strings = self.options.strings.map(function (s) {\n\t\t\t\t\t\t\treturn s.trim();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// div containing strings\n\t\t\t\t\t\tif (typeof self.options.stringsElement === 'string') {\n\t\t\t\t\t\t\tself.stringsElement = document.querySelector(self.options.stringsElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.stringsElement = self.options.stringsElement;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (self.stringsElement) {\n\t\t\t\t\t\t\tself.strings = [];\n\t\t\t\t\t\t\tself.stringsElement.style.display = 'none';\n\t\t\t\t\t\t\tvar strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t\t\t\t\t\t\tvar stringsLength = strings.length;\n\n\t\t\t\t\t\t\tif (stringsLength) {\n\t\t\t\t\t\t\t\tfor (var i = 0; i < stringsLength; i += 1) {\n\t\t\t\t\t\t\t\t\tvar stringEl = strings[i];\n\t\t\t\t\t\t\t\t\tself.strings.push(stringEl.innerHTML.trim());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// character number position of current string\n\t\t\t\t\t\tself.strPos = 0;\n\n\t\t\t\t\t\t// current array position\n\t\t\t\t\t\tself.arrayPos = 0;\n\n\t\t\t\t\t\t// index of string to stop backspacing on\n\t\t\t\t\t\tself.stopNum = 0;\n\n\t\t\t\t\t\t// Looping logic\n\t\t\t\t\t\tself.loop = self.options.loop;\n\t\t\t\t\t\tself.loopCount = self.options.loopCount;\n\t\t\t\t\t\tself.curLoop = 0;\n\n\t\t\t\t\t\t// shuffle the strings\n\t\t\t\t\t\tself.shuffle = self.options.shuffle;\n\t\t\t\t\t\t// the order of strings\n\t\t\t\t\t\tself.sequence = [];\n\n\t\t\t\t\t\tself.pause = {\n\t\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\t\ttypewrite: true,\n\t\t\t\t\t\t\tcurString: '',\n\t\t\t\t\t\t\tcurStrPos: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// When the typing is complete (when not looped)\n\t\t\t\t\t\tself.typingComplete = false;\n\n\t\t\t\t\t\t// Set the order in which the strings are typed\n\t\t\t\t\t\tfor (var i in self.strings) {\n\t\t\t\t\t\t\tself.sequence[i] = i;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If there is some text in the element\n\t\t\t\t\t\tself.currentElContent = this.getCurrentElContent(self);\n\n\t\t\t\t\t\tself.autoInsertCss = self.options.autoInsertCss;\n\n\t\t\t\t\t\tthis.appendAnimationCss(self);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'getCurrentElContent',\n\t\t\t\t\tvalue: function getCurrentElContent(self) {\n\t\t\t\t\t\tvar elContent = '';\n\t\t\t\t\t\tif (self.attr) {\n\t\t\t\t\t\t\telContent = self.el.getAttribute(self.attr);\n\t\t\t\t\t\t} else if (self.isInput) {\n\t\t\t\t\t\t\telContent = self.el.value;\n\t\t\t\t\t\t} else if (self.contentType === 'html') {\n\t\t\t\t\t\t\telContent = self.el.innerHTML;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telContent = self.el.textContent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn elContent;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'appendAnimationCss',\n\t\t\t\t\tvalue: function appendAnimationCss(self) {\n\t\t\t\t\t\tvar cssDataName = 'data-typed-js-css';\n\t\t\t\t\t\tif (!self.autoInsertCss) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!self.showCursor && !self.fadeOut) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (document.querySelector('[' + cssDataName + ']')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar css = document.createElement('style');\n\t\t\t\t\t\tcss.type = 'text/css';\n\t\t\t\t\t\tcss.setAttribute(cssDataName, true);\n\n\t\t\t\t\t\tvar innerCss = '';\n\t\t\t\t\t\tif (self.showCursor) {\n\t\t\t\t\t\t\tinnerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (self.fadeOut) {\n\t\t\t\t\t\t\tinnerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (css.length === 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcss.innerHTML = innerCss;\n\t\t\t\t\t\tdocument.body.appendChild(css);\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn Initializer;\n\t\t\t}();\n\n\t\t\texports['default'] = Initializer;\n\t\t\tvar initializer = new Initializer();\n\t\t\texports.initializer = initializer;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 2 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\n    * Defaults & options\n    * @returns {object} Typed defaults & options\n    * @public\n    */\n\n\t\t\t'use strict';\n\n\t\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tvar defaults = {\n\t\t\t\t/**\n     * @property {array} strings strings to be typed\n     * @property {string} stringsElement ID of element containing string children\n     */\n\t\t\t\tstrings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t\t\t\tstringsElement: null,\n\n\t\t\t\t/**\n     * @property {number} typeSpeed type speed in milliseconds\n     */\n\t\t\t\ttypeSpeed: 0,\n\n\t\t\t\t/**\n     * @property {number} startDelay time before typing starts in milliseconds\n     */\n\t\t\t\tstartDelay: 0,\n\n\t\t\t\t/**\n     * @property {number} backSpeed backspacing speed in milliseconds\n     */\n\t\t\t\tbackSpeed: 0,\n\n\t\t\t\t/**\n     * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n     */\n\t\t\t\tsmartBackspace: true,\n\n\t\t\t\t/**\n     * @property {boolean} shuffle shuffle the strings\n     */\n\t\t\t\tshuffle: false,\n\n\t\t\t\t/**\n     * @property {number} backDelay time before backspacing in milliseconds\n     */\n\t\t\t\tbackDelay: 700,\n\n\t\t\t\t/**\n     * @property {boolean} fadeOut Fade out instead of backspace\n     * @property {string} fadeOutClass css class for fade animation\n     * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n     */\n\t\t\t\tfadeOut: false,\n\t\t\t\tfadeOutClass: 'typed-fade-out',\n\t\t\t\tfadeOutDelay: 500,\n\n\t\t\t\t/**\n     * @property {boolean} loop loop strings\n     * @property {number} loopCount amount of loops\n     */\n\t\t\t\tloop: false,\n\t\t\t\tloopCount: Infinity,\n\n\t\t\t\t/**\n     * @property {boolean} showCursor show cursor\n     * @property {string} cursorChar character for cursor\n     * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n     */\n\t\t\t\tshowCursor: true,\n\t\t\t\tcursorChar: '|',\n\t\t\t\tautoInsertCss: true,\n\n\t\t\t\t/**\n     * @property {string} attr attribute for typing\n     * Ex: input placeholder, value, or just HTML text\n     */\n\t\t\t\tattr: null,\n\n\t\t\t\t/**\n     * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n     */\n\t\t\t\tbindInputFocusEvents: false,\n\n\t\t\t\t/**\n     * @property {string} contentType 'html' or 'null' for plaintext\n     */\n\t\t\t\tcontentType: 'html',\n\n\t\t\t\t/**\n     * All typing is complete\n     * @param {Typed} self\n     */\n\t\t\t\tonComplete: function onComplete(self) {},\n\n\t\t\t\t/**\n     * Before each string is typed\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tpreStringTyped: function preStringTyped(arrayPos, self) {},\n\n\t\t\t\t/**\n     * After each string is typed\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tonStringTyped: function onStringTyped(arrayPos, self) {},\n\n\t\t\t\t/**\n     * During looping, after last string is typed\n     * @param {Typed} self\n     */\n\t\t\t\tonLastStringBackspaced: function onLastStringBackspaced(self) {},\n\n\t\t\t\t/**\n     * Typing has been stopped\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tonTypingPaused: function onTypingPaused(arrayPos, self) {},\n\n\t\t\t\t/**\n     * Typing has been started after being stopped\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tonTypingResumed: function onTypingResumed(arrayPos, self) {},\n\n\t\t\t\t/**\n     * After reset\n     * @param {Typed} self\n     */\n\t\t\t\tonReset: function onReset(self) {},\n\n\t\t\t\t/**\n     * After stop\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tonStop: function onStop(arrayPos, self) {},\n\n\t\t\t\t/**\n     * After start\n     * @param {number} arrayPos\n     * @param {Typed} self\n     */\n\t\t\t\tonStart: function onStart(arrayPos, self) {},\n\n\t\t\t\t/**\n     * After destroy\n     * @param {Typed} self\n     */\n\t\t\t\tonDestroy: function onDestroy(self) {}\n\t\t\t};\n\n\t\t\texports['default'] = defaults;\n\t\t\tmodule.exports = exports['default'];\n\n\t\t\t/***/\n\t\t},\n\t\t/* 3 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\n    * TODO: These methods can probably be combined somehow\n    * Parse HTML tags & HTML Characters\n    */\n\n\t\t\t'use strict';\n\n\t\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\t\tvalue: true\n\t\t\t});\n\n\t\t\tvar _createClass = function () {\n\t\t\t\tfunction defineProperties(target, props) {\n\t\t\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t\t\t\t}\n\t\t\t\t}return function (Constructor, protoProps, staticProps) {\n\t\t\t\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t\t\t\t};\n\t\t\t}();\n\n\t\t\tfunction _classCallCheck(instance, Constructor) {\n\t\t\t\tif (!(instance instanceof Constructor)) {\n\t\t\t\t\tthrow new TypeError('Cannot call a class as a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar HTMLParser = function () {\n\t\t\t\tfunction HTMLParser() {\n\t\t\t\t\t_classCallCheck(this, HTMLParser);\n\t\t\t\t}\n\n\t\t\t\t_createClass(HTMLParser, [{\n\t\t\t\t\tkey: 'typeHtmlChars',\n\n\t\t\t\t\t/**\n      * Type HTML tags & HTML Characters\n      * @param {string} curString Current string\n      * @param {number} curStrPos Position in current string\n      * @param {Typed} self instance of Typed\n      * @returns {number} a new string position\n      * @private\n      */\n\n\t\t\t\t\tvalue: function typeHtmlChars(curString, curStrPos, self) {\n\t\t\t\t\t\tif (self.contentType !== 'html') return curStrPos;\n\t\t\t\t\t\tvar curChar = curString.substr(curStrPos).charAt(0);\n\t\t\t\t\t\tif (curChar === '<' || curChar === '&') {\n\t\t\t\t\t\t\tvar endTag = '';\n\t\t\t\t\t\t\tif (curChar === '<') {\n\t\t\t\t\t\t\t\tendTag = '>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tendTag = ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t\t\t\t\t\t\t\tcurStrPos++;\n\t\t\t\t\t\t\t\tif (curStrPos + 1 > curString.length) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurStrPos++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn curStrPos;\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n      * Backspace HTML tags and HTML Characters\n      * @param {string} curString Current string\n      * @param {number} curStrPos Position in current string\n      * @param {Typed} self instance of Typed\n      * @returns {number} a new string position\n      * @private\n      */\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'backSpaceHtmlChars',\n\t\t\t\t\tvalue: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t\t\t\t\t\tif (self.contentType !== 'html') return curStrPos;\n\t\t\t\t\t\tvar curChar = curString.substr(curStrPos).charAt(0);\n\t\t\t\t\t\tif (curChar === '>' || curChar === ';') {\n\t\t\t\t\t\t\tvar endTag = '';\n\t\t\t\t\t\t\tif (curChar === '>') {\n\t\t\t\t\t\t\t\tendTag = '<';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tendTag = '&';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t\t\t\t\t\t\t\tcurStrPos--;\n\t\t\t\t\t\t\t\tif (curStrPos < 0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurStrPos--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn curStrPos;\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn HTMLParser;\n\t\t\t}();\n\n\t\t\texports['default'] = HTMLParser;\n\t\t\tvar htmlParser = new HTMLParser();\n\t\t\texports.htmlParser = htmlParser;\n\n\t\t\t/***/\n\t\t}]\n\t\t/******/)\n\t);\n});\n;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typed_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typed_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_typed_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config_typed_component_config__ = __webpack_require__(2);\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'vue-typed-js',\n  props: __WEBPACK_IMPORTED_MODULE_1__config_typed_component_config__[\"a\" /* props */],\n  data: function data() {\n    return {\n      typedObj: null\n    };\n  },\n\n  methods: {\n    throwError: function throwError(message) {\n      throw new TypeError(message);\n    },\n    initTypedJS: function initTypedJS() {\n      var $typed = this.$refs.typedElement.querySelector('.typing');\n\n      if (this.$slots.default.length > 1) {\n        this.throwError('Just one child element allowed inside <' + this.$options.name + '> component.');\n      } else if (this.$slots.default.length === 1) {\n        var typedConfig = this.$props;\n        typedConfig = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__config_typed_component_config__[\"b\" /* getEventHandlers */])(this, typedConfig);\n        this.typedObj = new __WEBPACK_IMPORTED_MODULE_0_typed_js___default.a($typed, typedConfig);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initTypedJS();\n  },\n  destroyed: function destroyed() {\n    this.typedObj.destroy();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vVnVlVHlwZWRKcy52dWU/MDVlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7QUFDQSxzQkFEQTtBQUVBLHNGQUZBO0FBR0EsTUFIQSxrQkFHQTtBQUNBO0FBQ0E7QUFEQTtBQUdBLEdBUEE7O0FBUUE7QUFDQTtBQUNBO0FBQ0EsS0FIQTtBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BRkEsTUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFkQSxHQVJBO0FBd0JBLFNBeEJBLHFCQXdCQTtBQUNBO0FBQ0EsR0ExQkE7QUEyQkEsV0EzQkEsdUJBMkJBO0FBQ0E7QUFDQTtBQTdCQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwidHlwZWQtZWxlbWVudFwiIHJlZj1cInR5cGVkRWxlbWVudFwiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IFR5cGVkIGZyb20gJ3R5cGVkLmpzJ1xuaW1wb3J0IHsgcHJvcHMsIGdldEV2ZW50SGFuZGxlcnMgfSBmcm9tICcuLi9jb25maWcvdHlwZWQtY29tcG9uZW50LmNvbmZpZydcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAndnVlLXR5cGVkLWpzJyxcbiAgcHJvcHMsXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlZE9iajogbnVsbCxcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICB0aHJvd0Vycm9yOiBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihtZXNzYWdlKVxuICAgIH0sXG4gICAgaW5pdFR5cGVkSlM6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0ICR0eXBlZCA9IHRoaXMuJHJlZnMudHlwZWRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy50eXBpbmcnKVxuXG4gICAgICBpZiAodGhpcy4kc2xvdHMuZGVmYXVsdC5sZW5ndGggPiAxKSB7XG4gICAgICAgIHRoaXMudGhyb3dFcnJvcihgSnVzdCBvbmUgY2hpbGQgZWxlbWVudCBhbGxvd2VkIGluc2lkZSA8JHt0aGlzLiRvcHRpb25zLm5hbWV9PiBjb21wb25lbnQuYClcbiAgICAgIH0gZWxzZSBpZiAodGhpcy4kc2xvdHMuZGVmYXVsdC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgbGV0IHR5cGVkQ29uZmlnID0gdGhpcy4kcHJvcHNcbiAgICAgICAgdHlwZWRDb25maWcgPSBnZXRFdmVudEhhbmRsZXJzKHRoaXMsIHR5cGVkQ29uZmlnKVxuICAgICAgICB0aGlzLnR5cGVkT2JqID0gbmV3IFR5cGVkKCR0eXBlZCwgdHlwZWRDb25maWcpXG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5pbml0VHlwZWRKUygpXG4gIH0sXG4gIGRlc3Ryb3llZCAoKSB7XG4gICAgdGhpcy50eXBlZE9iai5kZXN0cm95KClcbiAgfSxcbn1cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cbi50eXBlZC1lbGVtZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAudHlwZWQtY3Vyc29yIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGFuaW1hdGlvbjogdHlwZWRqc0JsaW5rIDAuN3MgaW5maW5pdGU7XG4gIH1cbn1cblxuQGtleWZyYW1lcyB0eXBlZGpzQmxpbmt7XG4gIDUwJSB7IG9wYWNpdHk6IDAuMDsgfVxufVxuPC9zdHlsZT5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBWdWVUeXBlZEpzLnZ1ZT8yYjM1NjFiMyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIndlYnBhY2tQb2x5ZmlsbCIsImRlcHJlY2F0ZSIsInBhdGhzIiwiY2hpbGRyZW4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJsIiwiaSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0QsTUFBVCxFQUFpQjtBQUNqQyxLQUFHLENBQUNBLE9BQU9FLGVBQVgsRUFBNEI7QUFDM0JGLFNBQU9HLFNBQVAsR0FBbUIsWUFBVyxDQUFFLENBQWhDO0FBQ0FILFNBQU9JLEtBQVAsR0FBZSxFQUFmO0FBQ0E7QUFDQSxNQUFHLENBQUNKLE9BQU9LLFFBQVgsRUFBcUJMLE9BQU9LLFFBQVAsR0FBa0IsRUFBbEI7QUFDckJDLFNBQU9DLGNBQVAsQ0FBc0JQLE1BQXRCLEVBQThCLFFBQTlCLEVBQXdDO0FBQ3ZDUSxlQUFZLElBRDJCO0FBRXZDQyxRQUFLLGVBQVc7QUFDZixXQUFPVCxPQUFPVSxDQUFkO0FBQ0E7QUFKc0MsR0FBeEM7QUFNQUosU0FBT0MsY0FBUCxDQUFzQlAsTUFBdEIsRUFBOEIsSUFBOUIsRUFBb0M7QUFDbkNRLGVBQVksSUFEdUI7QUFFbkNDLFFBQUssZUFBVztBQUNmLFdBQU9ULE9BQU9XLENBQWQ7QUFDQTtBQUprQyxHQUFwQztBQU1BWCxTQUFPRSxlQUFQLEdBQXlCLENBQXpCO0FBQ0E7QUFDRCxRQUFPRixNQUFQO0FBQ0EsQ0FyQkQiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XHJcblx0aWYoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcclxuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xyXG5cdFx0bW9kdWxlLnBhdGhzID0gW107XHJcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcclxuXHRcdGlmKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XHJcblx0fVxyXG5cdHJldHVybiBtb2R1bGU7XHJcbn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAod2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9WdWVUeXBlZEpzLnZ1ZT9iYzY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vbG9hZGVyLmpzP3tcIm9taXRcIjowLFwicmVtb3ZlXCI6dHJ1ZX0hLi9+L2Nzcy1sb2FkZXIhLi9+L3Z1ZS1sb2FkZXIvbGliL3N0eWxlLXJld3JpdGVyLmpzP2lkPWRhdGEtdi0xZGU0NjQyZCEuL34vc2Fzcy1sb2FkZXIhLi9+L3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9zcmMvY29tcG9uZW50cy9WdWVUeXBlZEpzLnZ1ZVxuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyLmpzP2Q0ZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQgKFxuICByYXdTY3JpcHRFeHBvcnRzLFxuICBjb21waWxlZFRlbXBsYXRlLFxuICBzY29wZUlkLFxuICBjc3NNb2R1bGVzXG4pIHtcbiAgdmFyIGVzTW9kdWxlXG4gIHZhciBzY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMgfHwge31cblxuICAvLyBFUzYgbW9kdWxlcyBpbnRlcm9wXG4gIHZhciB0eXBlID0gdHlwZW9mIHJhd1NjcmlwdEV4cG9ydHMuZGVmYXVsdFxuICBpZiAodHlwZSA9PT0gJ29iamVjdCcgfHwgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGVzTW9kdWxlID0gcmF3U2NyaXB0RXhwb3J0c1xuICAgIHNjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzLmRlZmF1bHRcbiAgfVxuXG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAoY29tcGlsZWRUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMucmVuZGVyID0gY29tcGlsZWRUZW1wbGF0ZS5yZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IGNvbXBpbGVkVGVtcGxhdGUuc3RhdGljUmVuZGVyRm5zXG4gIH1cblxuICAvLyBzY29wZWRJZFxuICBpZiAoc2NvcGVJZCkge1xuICAgIG9wdGlvbnMuX3Njb3BlSWQgPSBzY29wZUlkXG4gIH1cblxuICAvLyBpbmplY3QgY3NzTW9kdWxlc1xuICBpZiAoY3NzTW9kdWxlcykge1xuICAgIHZhciBjb21wdXRlZCA9IG9wdGlvbnMuY29tcHV0ZWQgfHwgKG9wdGlvbnMuY29tcHV0ZWQgPSB7fSlcbiAgICBPYmplY3Qua2V5cyhjc3NNb2R1bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHZhciBtb2R1bGUgPSBjc3NNb2R1bGVzW2tleV1cbiAgICAgIGNvbXB1dGVkW2tleV0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGUgfVxuICAgIH0pXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVzTW9kdWxlOiBlc01vZHVsZSxcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyLmpzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"typedElement\",\n    staticClass: \"typed-element\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-1de4642d\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9WdWVUeXBlZEpzLnZ1ZT9jZjljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBbUIsYUFBYSwwQkFBMEI7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9e3JlbmRlcjpmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtcbiAgcmV0dXJuIF9jKCdkaXYnLCB7XG4gICAgcmVmOiBcInR5cGVkRWxlbWVudFwiLFxuICAgIHN0YXRpY0NsYXNzOiBcInR5cGVkLWVsZW1lbnRcIlxuICB9LCBbX3ZtLl90KFwiZGVmYXVsdFwiKV0sIDIpXG59LHN0YXRpY1JlbmRlckZuczogW119XG5tb2R1bGUuZXhwb3J0cy5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKG1vZHVsZS5ob3QuZGF0YSkge1xuICAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpLnJlcmVuZGVyKFwiZGF0YS12LTFkZTQ2NDJkXCIsIG1vZHVsZS5leHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyLmpzP2lkPWRhdGEtdi0xZGU0NjQyZCEuL34vdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vc3JjL2NvbXBvbmVudHMvVnVlVHlwZWRKcy52dWVcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ })
/******/ ]);
});